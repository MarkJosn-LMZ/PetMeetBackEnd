# PetMeet 后端 Nginx 配置
# 将此文件复制到 /etc/nginx/sites-available/petmeet
# 然后创建软链接：sudo ln -s /etc/nginx/sites-available/petmeet /etc/nginx/sites-enabled/

# 上游服务器配置
upstream petmeet_backend {
    server 127.0.0.1:3000;
    # 如果需要负载均衡，可以添加更多服务器
    # server 127.0.0.1:3001;
    # server 127.0.0.1:3002;
}

server {
    listen 80;
    server_name your_domain.com www.your_domain.com; # 替换为您的域名
    
    # 如果使用IP访问，使用以下配置
    # server_name YOUR_SERVER_IP;
    
    # 日志配置
    access_log /var/log/nginx/petmeet_access.log;
    error_log /var/log/nginx/petmeet_error.log;
    
    # 客户端最大请求体大小
    client_max_body_size 10M;
    
    # 静态文件服务（上传的文件）
    location /uploads {
        alias /var/www/petmeet-backend/uploads;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # API 路由代理
    location / {
        proxy_pass http://petmeet_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://petmeet_backend/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}

# HTTPS 配置（可选，建议配置SSL证书）
# server {
#     listen 443 ssl http2;
#     server_name your_domain.com www.your_domain.com;
#     
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # SSL 安全配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # 其他配置与HTTP版本相同
#     # ...
# } 